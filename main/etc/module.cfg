####################################################################
#██╗   ██╗ █████╗ ██████╗ ██████╗  ██████╗ ██████╗ ██████╗ ███████╗#
#██║   ██║██╔══██╗██╔══██╗██╔══██╗██╔════╝██╔═══██╗██╔══██╗██╔════╝#
#██║   ██║███████║██████╔╝██████╔╝██║     ██║   ██║██████╔╝█████╗  #
#╚██╗ ██╔╝██╔══██║██╔══██╗██╔═══╝ ██║     ██║   ██║██╔══██╗██╔══╝  #
# ╚████╔╝ ██║  ██║██║  ██║██║     ╚██████╗╚██████╔╝██║  ██║███████╗#
#  ╚═══╝  ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝      ╚═════╝ ╚═════╝ ╚═╝  ╚═╝╚══════╝#
####################################################################



#     _      ___   ___
#    /_\    / _ \ / _ \
#   //_\\  / /_)// /_)/
#  /  _  \/ ___// ___/
#  \_/ \_/\/    \/
#
#
# This section defines initial configuration for the API-Rest, like Host and Port.

[App]
ip = 0.0.0.0
port = 1025




#   __                     _
#  / _\  ___  _ __ __   __(_)  ___  ___  ___
#  \ \  / _ \| '__|\ \ / /| | / __|/ _ \/ __|
#  _\ \|  __/| |    \ V / | || (__|  __/\__ \
#  \__/ \___||_|     \_/  |_| \___|\___||___/
#
#
# This section defines configuration for the allowed services.
#
# There can be defined multiple services of the same type with
# different configurations. Each section is treated as a service definition.

# The services must follow the next schema:

#****************************************************************
#[Service name]
#****************************************************************

##
# WORKERS - Sets the amount of processes that will be launched in parallel for this
# service. Each process will be computed as a member of a pool, working each in an isolated CPU core if available.
#
#   Set it to auto in order to use as many processes as available CPU cores.
#
#   Example:
#       WORKERS = 4         # 4 Processes for this service.
#
#WORKERS = auto

##
# ALGORITHM - Sets the algorithm for the current service definition.
#
#       A list of algorithms can be retrieved by using the 'display_algorithms' binary from /bin/
#
#   Example:
#       ALGORITHM = dlib_face_detection
#
#ALGORITHM = opencv_face_detection

##
# SET_GPU - Forces the algorithm to use the GPU instead of the CPU for its execution, only if the algorithm is capable
# of executing on it.
#
# If the value is set to -1 or not specified, the CPU will be used. If a value greater than -1 is specified,
# the algorithm is going to be executed in the GPU that matches the index.
#
#   CNN based algorithms are specially boosted with this option activated. It requires CUDA and CuDNN in
# the system.
#
#
#   Example:
#       SET_GPU = -1
#
#SET_GPU = -1

##
# PUBLIC_NAME - A descriptive name for the service.
#
#   Example:
#       PUBLIC_NAME = OpenCV Face detection.
#
#PUBLIC_NAME = OpenCV Face detection.

##
# DESCRIPTION - A brief description of the service
#
#   Example:
#       DESCRIPTION = Face detection based on Viola&Jones (implementation from OpenCV).
#
#DESCRIPTION = Face detection based on Viola&Jones (implementation from OpenCV).

##
# DEFAULT - Set to True to mark as the default service of its type. If a request is made to the
#           REST API and no service of the type of the algorithm is specified, it will fall back to this one.
#
#   Example:
#       DEFAULT = True
#
#DEFAULT = False


#   _         ___                       _        _               _    _
#  / |       / __\__ _   ___  ___    __| |  ___ | |_  ___   ___ | |_ (_)  ___   _ __
#  | |      / _\ / _` | / __|/ _ \  / _` | / _ \| __|/ _ \ / __|| __|| | / _ \ | '_ \
#  | | _   / /  | (_| || (__|  __/ | (_| ||  __/| |_|  __/| (__ | |_ | || (_) || | | |
#  |_|(_)  \/    \__,_| \___|\___|  \__,_| \___| \__|\___| \___| \__||_| \___/ |_| |_|
#
# 1. FACE DETECTION SERVICES DEFINITION
#

#****************************************************************
[dlib-hog-svm-face-detection]
#****************************************************************
PUBLIC_NAME = DLib Face detection.
DESCRIPTION = Face detection based on HOG + SVM (from DLIB's implementation)
WORKERS = 6
ALGORITHM = DLibHogSVMFaceDetectionAlgorithm
USE_GPU = -1
DEFAULT = False

#****************************************************************
[opencv-haarcascade-face-detection]
#****************************************************************
PUBLIC_NAME = OpenCV Face detection.
DESCRIPTION = Face detection based on Viola&Jones (from OpenCV's implementation)
WORKERS = 4
ALGORITHM = OpenCVHaarCascadeFaceDetectionAlgorithm
USE_GPU = -1
DEFAULT = False

#****************************************************************
[caffe-cnn-mt-face-detection]
#****************************************************************
PUBLIC_NAME = MTCNN Face detection.
DESCRIPTION = Face detection based on CNN (Caffe)
WORKERS = 4
ALGORITHM = MTCNNFaceDetectionAlgorithm
USE_GPU = -1
DEFAULT = True

#   ____          _                             _    _                    _    _
#  |___ \        /_\    __ _   ___    ___  ___ | |_ (_) _ __ ___    __ _ | |_ (_)  ___   _ __
#    __) |      //_\\  / _` | / _ \  / _ \/ __|| __|| || '_ ` _ \  / _` || __|| | / _ \ | '_ \
#   / __/  _   /  _  \| (_| ||  __/ |  __/\__ \| |_ | || | | | | || (_| || |_ | || (_) || | | |
#  |_____|(_)  \_/ \_/ \__, | \___|  \___||___/ \__||_||_| |_| |_| \__,_| \__||_| \___/ |_| |_|
#                      |___/
#
# 2. AGE ESTIMATION SERVICES DEFINITION
#

#****************************************************************
[caffe-cnn-levi-hassner-age-estimation]
#****************************************************************
PUBLIC_NAME = CNN Age estimation (Levi-Hassner).
DESCRIPTION = Age estimation of face, based on a CNN (deep learning) models from Levi-Hassner.
WORKERS = 1
ALGORITHM = LeviHassnerCNNAgeEstimationAlgorithm
USE_GPU = -1
DEFAULT = True


#   _____        ___                  _                          _    _                    _    _
#  |___ /       / _ \ ___  _ __    __| |  ___  _ __    ___  ___ | |_ (_) _ __ ___    __ _ | |_ (_)  ___   _ __
#    |_ \      / /_\// _ \| '_ \  / _` | / _ \| '__|  / _ \/ __|| __|| || '_ ` _ \  / _` || __|| | / _ \ | '_ \
#   ___) |_   / /_\\|  __/| | | || (_| ||  __/| |    |  __/\__ \| |_ | || | | | | || (_| || |_ | || (_) || | | |
#  |____/(_)  \____/ \___||_| |_| \__,_| \___||_|     \___||___/ \__||_||_| |_| |_| \__,_| \__||_| \___/ |_| |_|
#
#
# 3. GENDER ESTIMATION SERVICES DEFINITION
#

#****************************************************************
[caffe-cnn-levi-hassner-gender-estimation]
#****************************************************************
PUBLIC_NAME = CNN Gender estimation (Levi-Hassner).
DESCRIPTION = Gender estimation of face, based on a CNN (deep learning) models from Levi-Hassner.
WORKERS = 1
ALGORITHM = LeviHassnerCNNGenderEstimationAlgorithm
USE_GPU = -1
DEFAULT = True
